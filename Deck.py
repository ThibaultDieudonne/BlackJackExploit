import random


class Deck:

    def __init__(self):
        self.NBDECKS = 2
        self.cards = [1 * self.NBDECKS] * 9 + [4 * self.NBDECKS]

    def draw(self):
        a = random.randint(sum(i for i in self.cards))
        for i in range(10):
            if sum(self.cards[0:i+1]) >= a:
                self.cards[i] -= 1
                return i

    # returns 0 if blackjack
    @staticmethod
    def score(cards):
        nbAces = cards.count(0)
        res = sum(cards) + len(cards) + nbAces * 10
        if res == 21 and len(cards) == 2:
            return 0
        for _ in range(nbAces):
            if res > 21:
                res -= 10
        return res


    @staticmethod
    def evd(score, evD):
        evdsum = sum(evD)
        if score > 21:
            return 0
        if score == 0:
            return 1.5*float(evdsum - evD[5])/evdsum
        res = evD[5]
        for i in range(5):
            if score > i+17:
                res += evD[i]
            elif score < i+17:
                res -= evD[i]
        return res / evdsum
