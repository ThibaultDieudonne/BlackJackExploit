from blackjack import FastEval, Timer, evd, score

def run(deck, deepness = 4, display = False):
    '''Run full simulation'''
    _timer = Timer()
    if display:
        _timer.is_daemon = True
        _timer.start()
    _deck = [_ for _ in deck]
    record = 0.
    hands = []
    probs = []
    s = float(sum(_deck))
    # finding holding frequency of each hand
    for c1 in range(10):
        p1 = _deck[c1]
        for c2 in range(10):
            if c1 == c2:
                p2 = p1 - 1
            else:
                p2 = _deck[c2]
            probs.append(p1 * p2)
            hands.append([c1, c2])
    # running evals
    for index in range(len(hands)):
        calc = FastEval(hands[index], _deck, False, deepness) 
        record += probs[index] * calc.expval(
            calc.cards,
            calc.deck,
            evd(score(calc.cards),
            calc.ddib,
            0))
        _timer.done += 1
    _timer.hastorun = False
    # returning result
    if display:
        return "Every case evaluated in {}s\nGlobal EV = {}%".format(
            _timer.count,
            round(100 * record / (s * (s - 1)), 6))
        cls()
    return round(100 * record / (s * (s - 1)), 6)
    
if __name__ == '__main__':
    print(run([32, 32, 32, 32, 32, 32, 32, 32, 32, 128]), 4, True)