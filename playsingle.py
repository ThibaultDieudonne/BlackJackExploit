import sys
import os
from blackjack import *

buildOptions = dict(
    packages = [ 'jinja2', 'jinja2.ext', 'email' ],
    excludes = [],
    # We can list binary includes here if our target environment is missing them.
    bin_includes = [
        'libcrypto.so.1.0.0',
        'libcrypto.so.10',
        'libgssapi_krb5.so.2',
        'libk5crypto.so.3',
        'libkeyutils.so.1',
        'libssl.so.1.0.1e',
        'libssl.so.10'
    ]
)

def run(cards):
    '''run specific hand simulation. Hand format: [player_card1, ..., dealer_card]'''
    _deck = [32, 32, 32, 32, 32, 32, 32, 32, 32, 128] # deck before hand is dealt
    calc = FastEval(cards, _deck, False, 20, True, len(cards))
    ev = calc.ev(calc.cards, calc.deck, evd(score(calc.cards), calc.ddib, 0))
    print("[{} vs {}]\n\n{}".format(
     ' '.join([cnames[card] for card in cards[:-1]]), cnames[cards[-1]], '\n'.join(
       ['{}: {}'.format(action, value) for action, value in ev.items()])))
    return ev

if __name__ == '__main__':
    cnames = ['A', '2', '3', '4', '5', '6', '7', '8', '9', 'T']
    if len(sys.argv) > 1:
        cards = [_ for _ in map(int, sys.argv[1:])]
    else:
        cards = [0, 0, 0]
    run(cards)
    os.system("pause>nul")